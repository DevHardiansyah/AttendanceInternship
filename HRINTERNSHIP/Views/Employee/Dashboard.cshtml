@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_dashboard.cshtml";
}
<!--begin::Toolbar-->
<div class="toolbar" id="kt_toolbar">
    <!--begin::Container-->
    <div id="kt_toolbar_container" class="container-fluid d-flex flex-stack">
        <!--begin::Page title-->
        <div data-kt-swapper="true" data-kt-swapper-mode="prepend"
             data-kt-swapper-parent="{default: '#kt_content_container', 'lg': '#kt_toolbar_container'}"
             class="page-title d-flex align-items-center flex-wrap me-3 mb-5 mb-lg-0">
            <!--begin::Title-->
            <h1 class="d-flex align-items-center text-dark fw-bolder fs-3 my-1">
                Dashboard
                <!--begin::Separator-->
                <span class="h-20px border-gray-200 border-start ms-3 mx-2"></span>
                <!--end::Separator-->
                <!--begin::Description-->
                <small class="text-muted fs-7 fw-bold my-1 ms-1">@ViewBag.title</small>
                <!--end::Description-->
            </h1>
            <!--end::Title-->
        </div>
        <!--end::Page title-->
    </div>
    <!--end::Container-->
</div>
<!--end::Toolbar-->
<!--begin::Post-->
<div class="post d-flex flex-column-fluid" id="kt_post">
    <!--begin::Container-->
    <div id="kt_content_container" class="container-xxl">
        <div class="row">
            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">

                        <div class="row">
                            <div class="col-md-6 col-sm-12 pb-2">
                                <h4 id="get__Time">
                                    HELLO, @Session["user"].ToString()!
                                </h4>
                                <p class="text-muted mb-4" id="get__LocalDate"></p>

                            </div>
                            <div class="col-md-4 col-sm-12">
                                <h5 class="display-5 text-center text-lowercase">
                                    <strong class=""><span class="red">W</span><span class="orange">O</span><span class=" yellow">N</span><span class="purple">D</span><span class="high_purple">E</span><span class="blue_sky">R</span></strong></h4>
                                    <h6 class="display-6 mt-3 text-center text-lowecase" id="typewriter"></h6>
                            </div>
                        </div>
                        <!-- Row -->
                    </div>
                </div>
            </div>
        </div>
        <br>
        <!--begin::Row-->
        @if (Session["intern"] == null)
        {
            <div class="row g-5 g-xl-10 mb-xl-10">
                <div class="col-md-6 col-lg-6 col-xl-6 col-xxl-3 mb-md-5 mb-xl-10">
                    <!--begin::Card widget 4-->
                    <div class="card card-flush h-md-50 mb-5 mb-xl-10">
                        <!--begin::Header-->
                        <div class="card-header pt-5">
                            <!--begin::Title-->
                            <div class="card-title d-flex flex-column">
                                <!--begin::Info-->
                                <div class="d-flex align-items-center">
                                    <!--begin::Amount-->
                                    <span class="fs-2hx fw-bolder text-dark me-2 lh-1 ls-n2">Base On Plant</span>
                                    <!--end::Amount-->
                                </div>
                                <!--end::Info-->
                            </div>
                            <!--end::Title-->
                        </div>
                        <!--end::Header-->
                        <!--begin::Card body-->
                        <div class="card-body pt-2 pb-4 d-flex align-items-center">
                            <!--begin::Chart-->
                            <div class="d-flex flex-center me-5 pt-2">
                                <div id="kt_chart_widgets_22_chart_1" class="mx-auto mb-4"></div>
                            </div>
                            <!--end::Chart-->
                        </div>
                        <!--end::Card body-->
                    </div>
                    <!--end::Card widget 4-->
                    <!--begin::Card widget 5-->
                    <div class="card card-flush h-md-50 mb-xl-10">
                        <!--begin::Header-->
                        <div class="card-header pt-5">
                            <!--begin::Title-->
                            <div class="card-title d-flex flex-column">
                                <!--begin::Info-->
                                <div class="d-flex align-items-center">
                                    <!--begin::Amount-->
                                    <span class="fs-2hx fw-bolder text-dark me-2 lh-1 ls-n2">Base On Status</span>
                                    <!--end::Amount-->
                                </div>
                                <!--end::Info-->
                            </div>
                            <!--end::Title-->
                        </div>
                        <!--end::Header-->
                        <!--begin::Card body-->
                        <div class="card-body pt-2 pb-4 d-flex align-items-center">
                            <!--begin::Chart-->
                            <div class="d-flex flex-center me-5 pt-2">
                                <div id="kt_chart_widgets_23_chart_2" class="mx-auto mb-4"></div>
                            </div>
                            <!--end::Chart-->
                        </div>
                        <!--end::Card body-->
                    </div>
                    <!--end::Card widget 5-->
                </div>
                <div class="col-md-6 col-lg-6 col-xl-6 col-xxl-3 mb-md-5 mb-xl-10">
                    <!--begin::Card widget 4-->
                    <div class="card card-flush h-md-50 mb-5 mb-xl-10">
                        <!--begin::Header-->
                        <div class="card-header pt-5">
                            <!--begin::Title-->
                            <div class="card-title d-flex flex-column">
                                <!--begin::Info-->
                                <div class="d-flex align-items-center">
                                    <!--begin::Amount-->
                                    <span class="fs-2hx fw-bolder text-dark me-2 lh-1 ls-n2">Base On Gender</span>
                                    <!--end::Amount-->
                                </div>
                                <!--end::Info-->
                            </div>
                            <!--end::Title-->
                        </div>
                        <!--end::Header-->
                        <!--begin::Card body-->
                        <div class="card-body pt-2 pb-4 d-flex align-items-center">
                            <!--begin::Chart-->
                            <div class="d-flex flex-center me-5 pt-2">
                                <div id="kt_chart_widgets_24_chart_3" class="mx-auto mb-4"></div>
                            </div>
                            <!--end::Chart-->
                        </div>
                        <!--end::Card body-->
                    </div>
                    <!--end::Card widget 4-->
                    <!--begin::Card widget 5-->
                    <div class="card card-flush h-md-50 mb-xl-10">
                        <!--begin::Header-->
                        <div class="card-header pt-5">
                            <!--begin::Title-->
                            <div class="card-title d-flex flex-column">
                                <!--begin::Info-->
                                <div class="d-flex align-items-center">
                                    <!--begin::Amount-->
                                    <span class="fs-2hx fw-bolder text-dark me-2 lh-1 ls-n2">Base On IDL & DL</span>
                                    <!--end::Amount-->
                                </div>
                                <!--end::Info-->
                            </div>
                            <!--end::Title-->
                        </div>
                        <!--end::Header-->
                        <!--begin::Card body-->
                        <div class="card-body pt-2 pb-4 d-flex align-items-center">
                            <!--begin::Chart-->
                            <div class="d-flex flex-center me-5 pt-2">
                                <div id="kt_chart_widgets_25_chart_4" class="mx-auto mb-4"></div>
                            </div>
                            <!--end::Chart-->
                        </div>
                        <!--end::Card body-->
                    </div>
                    <!--end::Card widget 5-->
                </div>
                <!--begin::Col-->
                <div class="col-lg-12 col-xl-12 col-xxl-6 mb-5 mb-xl-0">
                    <!--begin::Chart widget 3-->
                    <div class="card card-flush overflow-hidden h-md-100">
                        <!--begin::Header-->
                        <div class="card-header py-5">
                            <!--begin::Title-->
                            <h3 class="card-title align-items-start flex-column">
                                <span class="fs-2hx fw-bolder text-gray-800 me-2 lh-1 ls-n2">Employee Movement</span>
                            </h3>
                            <!--end::Title-->
                            <!--begin::Toolbar-->
                            <div class="card-toolbar">
                                <!--begin::Menu-->
                                <button class="btn btn-icon btn-color-gray-400 btn-active-color-primary justify-content-end" data-kt-menu-trigger="click" data-kt-menu-placement="bottom-end" data-kt-menu-overflow="true">
                                    <!--begin::Svg Icon | path: icons/duotune/general/gen023.svg-->
                                    <span class="svg-icon svg-icon-1">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                                            <rect opacity="0.3" x="2" y="2" width="20" height="20" rx="4" fill="currentColor" />
                                            <rect x="11" y="11" width="2.6" height="2.6" rx="1.3" fill="currentColor" />
                                            <rect x="15" y="11" width="2.6" height="2.6" rx="1.3" fill="currentColor" />
                                            <rect x="7" y="11" width="2.6" height="2.6" rx="1.3" fill="currentColor" />
                                        </svg>
                                    </span>
                                    <!--end::Svg Icon-->
                                </button>
                                <!--begin::Menu 2-->
                                <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-800 menu-state-bg-light-primary fw-bold w-200px" data-kt-menu="true">
                                    <!--begin::Menu item-->
                                    <div class="menu-item px-3">
                                        <div class="menu-content fs-6 text-dark fw-bolder px-3 py-4">Quick Actions</div>
                                    </div>
                                    <!--end::Menu item-->
                                    <!--begin::Menu separator-->
                                    <div class="separator mb-3 opacity-75"></div>
                                    <!--end::Menu separator-->
                                    <!--begin::Menu item-->
                                    <div class="menu-item px-3">
                                        <a href="#" class="menu-link px-3">New Ticket</a>
                                    </div>
                                    <!--end::Menu item-->
                                    <!--begin::Menu item-->
                                    <div class="menu-item px-3">
                                        <a href="#" class="menu-link px-3">New Customer</a>
                                    </div>
                                    <!--end::Menu item-->
                                    <!--begin::Menu item-->
                                    <div class="menu-item px-3" data-kt-menu-trigger="hover" data-kt-menu-placement="right-start">
                                        <!--begin::Menu item-->
                                        <a href="#" class="menu-link px-3">
                                            <span class="menu-title">New Group</span>
                                            <span class="menu-arrow"></span>
                                        </a>
                                        <!--end::Menu item-->
                                        <!--begin::Menu sub-->
                                        <div class="menu-sub menu-sub-dropdown w-175px py-4">
                                            <!--begin::Menu item-->
                                            <div class="menu-item px-3">
                                                <a href="#" class="menu-link px-3">Admin Group</a>
                                            </div>
                                            <!--end::Menu item-->
                                            <!--begin::Menu item-->
                                            <div class="menu-item px-3">
                                                <a href="#" class="menu-link px-3">Staff Group</a>
                                            </div>
                                            <!--end::Menu item-->
                                            <!--begin::Menu item-->
                                            <div class="menu-item px-3">
                                                <a href="#" class="menu-link px-3">Member Group</a>
                                            </div>
                                            <!--end::Menu item-->
                                        </div>
                                        <!--end::Menu sub-->
                                    </div>
                                    <!--end::Menu item-->
                                    <!--begin::Menu item-->
                                    <div class="menu-item px-3">
                                        <a href="#" class="menu-link px-3">New Contact</a>
                                    </div>
                                    <!--end::Menu item-->
                                    <!--begin::Menu separator-->
                                    <div class="separator mt-3 opacity-75"></div>
                                    <!--end::Menu separator-->
                                    <!--begin::Menu item-->
                                    <div class="menu-item px-3">
                                        <div class="menu-content px-3 py-3">
                                            <a class="btn btn-primary btn-sm px-4" href="#">Generate Reports</a>
                                        </div>
                                    </div>
                                    <!--end::Menu item-->
                                </div>
                                <!--end::Menu 2-->
                                <!--end::Menu-->
                            </div>
                            <!--end::Toolbar-->
                        </div>
                        <!--end::Header-->
                        <!--begin::Card body-->
                        <div class="card-body d-flex justify-content-between flex-column pb-1 px-0">
                            <!--begin::Chart-->
                            <div class="mixed-widget-5-chart" data-kt-color="primary" style="height: 600px"></div>
                            <!--end::Chart-->
                        </div>
                        <!--end::Card body-->
                    </div>
                    <!--end::Chart widget 3-->
                </div>
                <!--end::Col-->
            </div>
            <script>
                //Chart
                "use strict";

                // Class Plant
                var KTChartsWidget22 = function () {
                    // Private methods
                    var initChart = function (tabSelector, chartSelector, data, initByDefault) {
                        var element = document.querySelector(chartSelector);

                        if (!element) {
                            return;
                        }

                        var height = parseInt(KTUtil.css(element, 'height'));

                        var options = {
                            series: data,
                            chart: {
                                fontFamily: 'inherit',
                                type: 'donut',
                                width: 250,
                            },
                            plotOptions: {
                                pie: {
                                    donut: {
                                        size: '50%',
                                        labels: {
                                            value: {
                                                fontSize: '10px'
                                            }
                                        }
                                    }
                                }
                            },
                            colors: [
                                KTUtil.getCssVariableValue('--bs-primary'),
                                KTUtil.getCssVariableValue('--bs-danger')
                            ],
                            stroke: {
                                width: 0
                            },
                            labels: ['East', 'West'],
                            legend: {
                                show: false,
                            },
                            fill: {
                                type: 'false',
                            }
                        };

                        var chart = new ApexCharts(element, options);

                        var init = false;

                        var tab = document.querySelector(tabSelector);

                        if (initByDefault === true) {
                            chart.render();
                            init = true;
                        }

                        tab.addEventListener('shown.bs.tab', function (event) {
                            if (init == false) {
                                chart.render();
                                init = true;
                            }
                        })
                    }

                    // Public methods
                    return {
                        init: function () {
                            $.getJSON("/BussinessIntelligence/getPlant", function (data) {
                                initChart('#kt_chart_widgets_22_tab_1', '#kt_chart_widgets_22_chart_1', [data['EastPlant'], data['WestPlant']], true);
                            });
                        }
                    }
                }();
                // Webpack support
                if (typeof module !== 'undefined') {
                    module.exports = KTChartsWidget22;
                }
                // On document ready
                KTUtil.onDOMContentLoaded(function () {
                    KTChartsWidget22.init();
                });


                // Class Status
                var KTChartsWidget23 = function () {
                    // Private methods
                    var initChart = function (tabSelector, chartSelector, data, initByDefault) {
                        var element = document.querySelector(chartSelector);

                        if (!element) {
                            return;
                        }

                        var height = parseInt(KTUtil.css(element, 'height'));

                        var options = {
                            series: data,
                            chart: {
                                fontFamily: 'inherit',
                                type: 'donut',
                                width: 250,
                            },
                            plotOptions: {
                                pie: {
                                    donut: {
                                        size: '50%',
                                        labels: {
                                            value: {
                                                fontSize: '10px'
                                            }
                                        }
                                    }
                                }
                            },
                            colors: [
                                KTUtil.getCssVariableValue('--bs-primary'),
                                KTUtil.getCssVariableValue('--bs-danger')
                            ],
                            stroke: {
                                width: 0
                            },
                            labels: ['Permanent', 'Contract'],
                            legend: {
                                show: false,
                            },
                            fill: {
                                type: 'false',
                            }
                        };

                        var chart = new ApexCharts(element, options);

                        var init = false;

                        var tab = document.querySelector(tabSelector);

                        if (initByDefault === true) {
                            chart.render();
                            init = true;
                        }

                        tab.addEventListener('shown.bs.tab', function (event) {
                            if (init == false) {
                                chart.render();
                                init = true;
                            }
                        })
                    }

                    // Public methods
                    return {
                        init: function () {
                            $.getJSON("/BussinessIntelligence/getStatuEmployee", function (data) {
                                initChart('#kt_chart_widgets_23_tab_2', '#kt_chart_widgets_23_chart_2', [data['permanent'], data['contract']], true);
                            });
                        }
                    }
                }();
                // Webpack support
                if (typeof module !== 'undefined') {
                    module.exports = KTChartsWidget23;
                }
                // On document ready
                KTUtil.onDOMContentLoaded(function () {
                    KTChartsWidget23.init();
                });


                // Class Gender
                var KTChartsWidget24 = function () {
                    // Private methods
                    var initChart = function (tabSelector, chartSelector, data, initByDefault) {
                        var element = document.querySelector(chartSelector);

                        if (!element) {
                            return;
                        }

                        var height = parseInt(KTUtil.css(element, 'height'));

                        var options = {
                            series: data,
                            chart: {
                                fontFamily: 'inherit',
                                type: 'donut',
                                width: 250,
                            },
                            plotOptions: {
                                pie: {
                                    donut: {
                                        size: '50%',
                                        labels: {
                                            value: {
                                                fontSize: '10px'
                                            }
                                        }
                                    }
                                }
                            },
                            colors: [
                                KTUtil.getCssVariableValue('--bs-primary'),
                                KTUtil.getCssVariableValue('--bs-danger')
                            ],
                            stroke: {
                                width: 0
                            },
                            labels: ['Male', 'Female'],
                            legend: {
                                show: false,
                            },
                            fill: {
                                type: 'false',
                            }
                        };

                        var chart = new ApexCharts(element, options);

                        var init = false;

                        var tab = document.querySelector(tabSelector);

                        if (initByDefault === true) {
                            chart.render();
                            init = true;
                        }

                        tab.addEventListener('shown.bs.tab', function (event) {
                            if (init == false) {
                                chart.render();
                                init = true;
                            }
                        })
                    }

                    // Public methods
                    return {
                        init: function () {
                            $.getJSON("/BussinessIntelligence/getGender", function (data) {
                                initChart('#kt_chart_widgets_24_tab_3', '#kt_chart_widgets_24_chart_3', [data['Male'], data['Female']], true);
                            });
                        }
                    }
                }();
                // Webpack support
                if (typeof module !== 'undefined') {
                    module.exports = KTChartsWidget24;
                }
                // On document ready
                KTUtil.onDOMContentLoaded(function () {
                    KTChartsWidget24.init();
                });


                // Class IDL & DL
                var KTChartsWidget25 = function () {
                    // Private methods
                    var initChart = function (tabSelector, chartSelector, data, initByDefault) {
                        var element = document.querySelector(chartSelector);

                        if (!element) {
                            return;
                        }

                        var height = parseInt(KTUtil.css(element, 'height'));

                        var options = {
                            series: data,
                            chart: {
                                fontFamily: 'inherit',
                                type: 'donut',
                                width: 250,
                            },
                            plotOptions: {
                                pie: {
                                    donut: {
                                        size: '50%',
                                        labels: {
                                            value: {
                                                fontSize: '10px'
                                            }
                                        }
                                    }
                                }
                            },
                            colors: [
                                KTUtil.getCssVariableValue('--bs-primary'),
                                KTUtil.getCssVariableValue('--bs-danger')
                            ],
                            stroke: {
                                width: 0
                            },
                            labels: ['IDL', 'DL'],
                            legend: {
                                show: false,
                            },
                            fill: {
                                type: 'false',
                            }
                        };

                        var chart = new ApexCharts(element, options);

                        var init = false;

                        var tab = document.querySelector(tabSelector);

                        if (initByDefault === true) {
                            chart.render();
                            init = true;
                        }

                        tab.addEventListener('shown.bs.tab', function (event) {
                            if (init == false) {
                                chart.render();
                                init = true;
                            }
                        })
                    }

                    // Public methods
                    return {
                        init: function () {
                            $.getJSON("/BussinessIntelligence/getEmjoba", function (data) {
                                initChart('#kt_chart_widgets_25_tab_4', '#kt_chart_widgets_25_chart_4', [data['IDL'], data['DL']], true);
                            });
                        }
                    }
                }();
                // Webpack support
                if (typeof module !== 'undefined') {
                    module.exports = KTChartsWidget25;
                }
                // On document ready
                KTUtil.onDOMContentLoaded(function () {
                    KTChartsWidget25.init();
                });

                "use strict";

                // Employee Movement
                var KTWidgetsPersonal = function () {
                    // Statistics widgets


                    var EmployeeMovement = function () {
                        var charts = document.querySelectorAll('.mixed-widget-5-chart');

                        var color;
                        var height;
                        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');
                        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');
                        var baseLightColor;
                        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');
                        var baseColor;
                        var options;
                        var chart;
                        $.getJSON("/BussinessIntelligence/getCountTotalNewHire", function (data) {
                            [].slice.call(charts).map(function (element) {
                                color = element.getAttribute("data-kt-color");
                                height = parseInt(KTUtil.css(element, 'height'));
                                baseColor = KTUtil.getCssVariableValue('--bs-' + color);

                                options = {
                                    series: [{
                                        name: 'New Hire',
                                        data: [data['jan'], data['feb'], data['mar'], data['apr'], data['mei'], data['jun'], data['jul'], data['aug'], data['sep'], data['oct'], data['nov'], data['dec']]
                                    }, {
                                        name: 'End Contract',
                                        data: [data['jan1'], data['feb1'], data['mar1'], data['apr1'], data['mei1'], data['jun1'], data['jul1'], data['aug1'], data['sep1'], data['oct1'], data['nov1'], data['dec1']]
                                    }],
                                    chart: {
                                        fontFamily: 'inherit',
                                        type: 'bar',
                                        height: height,
                                        toolbar: {
                                            show: false
                                        }
                                    },
                                    plotOptions: {
                                        bar: {
                                            horizontal: false,
                                            columnWidth: ['50%'],
                                            borderRadius: 4
                                        },
                                    },
                                    legend: {
                                        show: false
                                    },
                                    dataLabels: {
                                        enabled: false
                                    },
                                    stroke: {
                                        show: true,
                                        width: 1,
                                        colors: ['transparent']
                                    },
                                    xaxis: {
                                        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                                        axisBorder: {
                                            show: false,
                                        },
                                        axisTicks: {
                                            show: false
                                        },
                                        labels: {
                                            style: {
                                                colors: labelColor,
                                                fontSize: '12px'
                                            }
                                        }
                                    },
                                    yaxis: {
                                        y: 0,
                                        offsetX: 0,
                                        offsetY: 0,
                                        labels: {
                                            style: {
                                                colors: labelColor,
                                                fontSize: '12px'
                                            }
                                        }
                                    },
                                    fill: {
                                        type: 'solid'
                                    },
                                    states: {
                                        normal: {
                                            filter: {
                                                type: 'none',
                                                value: 0
                                            }
                                        },
                                        hover: {
                                            filter: {
                                                type: 'none',
                                                value: 0
                                            }
                                        },
                                        active: {
                                            allowMultipleDataPointsSelection: false,
                                            filter: {
                                                type: 'none',
                                                value: 0
                                            }
                                        }
                                    },
                                    tooltip: {
                                        style: {
                                            fontSize: '12px'
                                        },
                                        y: {
                                            formatter: function (val) {
                                                return "" + val + " employee"
                                            }
                                        }
                                    },
                                    colors: [baseColor, secondaryColor],
                                    grid: {
                                        padding: {
                                            top: 10
                                        },
                                        borderColor: borderColor,
                                        strokeDashArray: 4,
                                        yaxis: {
                                            lines: {
                                                show: true
                                            }
                                        }
                                    }
                                };

                                chart = new ApexCharts(element, options);
                                chart.render();
                            });
                        });
                    }

                    // Dark mode toggler
                    var initDarkModeToggle = function () {
                        var toggle = document.querySelector('#kt_user_menu_dark_mode_toggle');

                        if (toggle) {
                            toggle.addEventListener('click', function () {
                                window.location.href = this.getAttribute('data-kt-url');
                            });
                        }
                    }

                    // Public methods
                    return {
                        init: function () {

                            // Dark Mode
                            initDarkModeToggle();

                            EmployeeMovement();

                        }
                    }
                }();

                // Webpack support
                if (typeof module !== 'undefined') {
                    module.exports = KTWidgets;
                }

                // On document ready
                KTUtil.onDOMContentLoaded(function () {
                    KTWidgetsPersonal.init();
                });

            </script>
        }
        <!--end::Row-->
        @if (Session["intern"] != null)
        {
            <div class="row gy-5 g-xl-8">
                <!--begin::Col-->
                <div class="col-xl-4">
                    <!--begin::Mixed Widget 7-->
                    <div class="card card-xl-stretch-50 mb-5 mb-xl-8">
                        <!--begin::Body-->
                        <div class="card-body d-flex flex-center">
                            <!--begin::Button-->
                            <a href="/Intern/AttendanceIntern" class="btn btn-clear d-flex flex-column flex-center">
                                <!--begin::Illustration-->
                                <img src="/Content/assets/media/illustrations/unitedpalms-1/4.png" alt="" class="mw-100 mh-150px mb-7">
                                <!--end::Illustration-->
                                <!--begin::Label-->
                                <div class="fw-bolder fs-3 text-gray-600 text-hover-primary">Add Daily Activity</div>
                                <!--end::Label-->
                            </a>
                            <!--begin::Button-->
                        </div>
                        <!--end::Body-->
                    </div>
                    <!--end::Mixed Widget 7-->
                    <!--begin::Mixed Widget 10-->
                    <div class="card card-xl-stretch-50 mb-5 mb-xl-8">
                        <!--begin::Body-->
                        <div class="card-body p-0 d-flex justify-content-between flex-column overflow-hidden">
                            <!--begin::Hidden-->
                            <div class="d-flex flex-stack flex-wrap flex-grow-1 px-9 pt-9 pb-3">
                                <div class="me-2">
                                    <span class="fw-bolder text-gray-800 d-block fs-3">Summery Attendance</span>
                                    <span class="text-gray-400 fw-bold"></span>
                                </div>
                                <div class="fw-bolder fs-3 text-primary">2022</div>
                            </div>
                            <!--end::Hidden-->
                            <!--begin::Chart-->
                            <div class="mixed-widget-10-chart" data-kt-color="primary" style="height: 175px"></div>
                            <!--end::Chart-->
                        </div>
                    </div>
                    <!--end::Mixed Widget 10-->
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-xl-4">
                    <!--begin::List Widget 5-->
                    <div class="card card-xl-stretch">
                        <!--begin::Header-->
                        <div class="card-header align-items-center border-0 mt-4">
                            <h3 class="card-title align-items-start flex-column">
                                <span class="fw-bolder mb-2 text-dark">Activities</span>
                                <span class="text-muted fw-bold fs-7">Daily activities in last one week</span>
                            </h3>
                        </div>
                        <!--end::Header-->
                        <!--begin::Body-->
                        <div class="card-body pt-5">
                            <!--begin::Timeline-->
                            <div class="timeline-label">
                                @foreach (var item in ViewBag.Activity)
                                {
                                    <div class="timeline-item">
                                        <!--begin::Label-->
                                        <div class="timeline-label fw-bolder text-gray-800 fs-7">@Convert.ToDateTime(item.Date).ToString("MMM-dd")</div>
                                        <!--end::Label-->
                                        <!--begin::Badge-->
                                        <div class="timeline-badge">
                                            <i class="fa fa-genderless text-warning fs-1"></i>
                                        </div>
                                        <!--end::Badge-->
                                        <!--begin::Text-->
                                        <div class="fw-mormal timeline-content text-muted ps-3">@item.Activity</div>
                                        <!--end::Text-->
                                    </div>
                                }
                                <!--end::Item-->
                            </div>
                            <!--end::Timeline-->
                        </div>
                        <!--end: Card Body-->
                    </div>
                    <!--end: List Widget 5-->
                </div>
                <!--end::Col-->
                <!--begin::Col-->
                <div class="col-xl-4">
                    <!--begin::Mixed Widget 7-->
                    <div class="card card-xl-stretch-50 mb-5 mb-xl-8">
                        <!--begin::Body-->
                        <div class="card-body d-flex flex-column p-0">
                            <!--begin::Stats-->
                            <div class="flex-grow-1 card-p pb-0">
                                <div class="d-flex flex-stack flex-wrap">
                                    <div class="me-2">
                                        <a href="#" class="text-dark text-hover-primary fw-bolder fs-3">Result Absen Late</a>
                                        <div class="text-muted fs-7 fw-bold">Counting absen late in current year</div>
                                    </div>
                                    <div class="fw-bolder fs-3 text-primary">2022</div>
                                </div>
                            </div>
                            <!--end::Stats-->
                            <!--begin::Chart-->
                            <div class="absen-late-chart card-rounded-bottom" data-kt-chart-color="primary" style="height: 150px"></div>
                            <!--end::Chart-->
                        </div>
                        <!--end::Body-->
                    </div>
                    <!--end::Mixed Widget 7-->
                    <!--begin::Mixed Widget 10-->
                    <div class="card card-xl-stretch-50 mb-5 mb-xl-8">
                        <!--begin::Body-->
                        <div class="card-body p-0 d-flex justify-content-between flex-column overflow-hidden">
                            <!--begin::Hidden-->
                            <div class="d-flex flex-stack flex-wrap flex-grow-1 px-9 pt-9 pb-3">
                                <div class="me-2">
                                    <span class="fw-bolder text-gray-800 d-block fs-3">Result Half Day</span>
                                    <span class="text-gray-400 fw-bold">Result attendance half day in current year</span>
                                </div>
                                <div class="fw-bolder fs-3 text-primary">2022</div>
                            </div>
                            <!--end::Hidden-->
                            <!--begin::Chart-->
                            <div class="absen-halfday-chart" data-kt-chart-color="primary" style="height: 175px"></div>
                            <!--end::Chart-->
                        </div>
                    </div>
                    <!--end::Mixed Widget 10-->
                </div>
                <!--end::Col-->
            </div>
            <!--end::Row-->
            <script>
                "use strict";

                // Class definition
                var KTWidgets = function () {

                    // Mixed widgets
                    var DashboardAbsLate = function () {
                        var charts = document.querySelectorAll('.absen-late-chart');
                        $.getJSON("/Intern/Dashboardavgattendance", function (data) {
                            [].slice.call(charts).map(function (element) {
                                var height = parseInt(KTUtil.css(element, 'height'));

                                if (!element) {
                                    return;
                                }

                                var color = element.getAttribute('data-kt-chart-color');

                                var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');
                                var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');
                                var baseColor = KTUtil.getCssVariableValue('--bs-' + color);
                                var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color);

                                var options = {
                                    series: [{
                                        name: 'Attendance Late',
                                        data: [data['jan'], data['feb'], data['mar'], data['apr'], data['mei'], data['jun'], data['jul'], data['aug'], data['sep'], data['oct'], data['nov'], data['dec']]
                                    }],
                                    chart: {
                                        fontFamily: 'inherit',
                                        type: 'area',
                                        height: height,
                                        toolbar: {
                                            show: false
                                        },
                                        zoom: {
                                            enabled: false
                                        },
                                        sparkline: {
                                            enabled: true
                                        }
                                    },
                                    plotOptions: {},
                                    legend: {
                                        show: false
                                    },
                                    dataLabels: {
                                        enabled: false
                                    },
                                    fill: {
                                        type: 'solid',
                                        opacity: 1
                                    },
                                    stroke: {
                                        curve: 'smooth',
                                        show: true,
                                        width: 3,
                                        colors: [baseColor]
                                    },
                                    xaxis: {
                                        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                                        axisBorder: {
                                            show: false,
                                        },
                                        axisTicks: {
                                            show: false
                                        },
                                        labels: {
                                            show: false,
                                            style: {
                                                colors: labelColor,
                                                fontSize: '12px'
                                            }
                                        },
                                        crosshairs: {
                                            show: false,
                                            position: 'front',
                                            stroke: {
                                                color: strokeColor,
                                                width: 1,
                                                dashArray: 3
                                            }
                                        },
                                        tooltip: {
                                            enabled: true,
                                            formatter: undefined,
                                            offsetY: 0,
                                            style: {
                                                fontSize: '12px'
                                            }
                                        }
                                    },
                                    yaxis: {
                                        min: 0,
                                        max: 60,
                                        labels: {
                                            show: false,
                                            style: {
                                                colors: labelColor,
                                                fontSize: '12px'
                                            }
                                        }
                                    },
                                    states: {
                                        normal: {
                                            filter: {
                                                type: 'none',
                                                value: 0
                                            }
                                        },
                                        hover: {
                                            filter: {
                                                type: 'none',
                                                value: 0
                                            }
                                        },
                                        active: {
                                            allowMultipleDataPointsSelection: false,
                                            filter: {
                                                type: 'none',
                                                value: 0
                                            }
                                        }
                                    },
                                    tooltip: {
                                        style: {
                                            fontSize: '12px'
                                        },
                                        y: {
                                            formatter: function (val) {
                                                return "" + val + ""
                                            }
                                        }
                                    },
                                    colors: [lightColor],
                                    markers: {
                                        colors: [lightColor],
                                        strokeColor: [baseColor],
                                        strokeWidth: 3
                                    }
                                };

                                var chart = new ApexCharts(element, options);
                                chart.render();
                            });
                        });
                    }
                    var DashboardHalfDay = function () {
                        var charts = document.querySelectorAll('.absen-halfday-chart');
                        $.getJSON("/Intern/Dashboardavgattendance", function (data) {
                            [].slice.call(charts).map(function (element) {
                                var height = parseInt(KTUtil.css(element, 'height'));

                                if (!element) {
                                    return;
                                }

                                var color = element.getAttribute('data-kt-chart-color');

                                var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');
                                var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');
                                var baseColor = KTUtil.getCssVariableValue('--bs-' + color);
                                var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color);

                                var options = {
                                    series: [{
                                        name: 'Half Day',
                                        data: [data['jan1'], data['feb1'], data['mar1'], data['apr1'], data['mei1'], data['jun1'], data['jul1'], data['aug1'], data['sep1'], data['oct1'], data['nov1'], data['dec1']]
                                    }],
                                    chart: {
                                        fontFamily: 'inherit',
                                        type: 'area',
                                        height: height,
                                        toolbar: {
                                            show: false
                                        },
                                        zoom: {
                                            enabled: false
                                        },
                                        sparkline: {
                                            enabled: true
                                        }
                                    },
                                    plotOptions: {},
                                    legend: {
                                        show: false
                                    },
                                    dataLabels: {
                                        enabled: false
                                    },
                                    fill: {
                                        type: 'solid',
                                        opacity: 1
                                    },
                                    stroke: {
                                        curve: 'smooth',
                                        show: true,
                                        width: 3,
                                        colors: [baseColor]
                                    },
                                    xaxis: {
                                        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                                        axisBorder: {
                                            show: false,
                                        },
                                        axisTicks: {
                                            show: false
                                        },
                                        labels: {
                                            show: false,
                                            style: {
                                                colors: labelColor,
                                                fontSize: '12px'
                                            }
                                        },
                                        crosshairs: {
                                            show: false,
                                            position: 'front',
                                            stroke: {
                                                color: strokeColor,
                                                width: 1,
                                                dashArray: 3
                                            }
                                        },
                                        tooltip: {
                                            enabled: true,
                                            formatter: undefined,
                                            offsetY: 0,
                                            style: {
                                                fontSize: '12px'
                                            }
                                        }
                                    },
                                    yaxis: {
                                        min: 0,
                                        max: 60,
                                        labels: {
                                            show: false,
                                            style: {
                                                colors: labelColor,
                                                fontSize: '12px'
                                            }
                                        }
                                    },
                                    states: {
                                        normal: {
                                            filter: {
                                                type: 'none',
                                                value: 0
                                            }
                                        },
                                        hover: {
                                            filter: {
                                                type: 'none',
                                                value: 0
                                            }
                                        },
                                        active: {
                                            allowMultipleDataPointsSelection: false,
                                            filter: {
                                                type: 'none',
                                                value: 0
                                            }
                                        }
                                    },
                                    tooltip: {
                                        style: {
                                            fontSize: '12px'
                                        },
                                        y: {
                                            formatter: function (val) {
                                                return "" + val + ""
                                            }
                                        }
                                    },
                                    colors: [lightColor],
                                    markers: {
                                        colors: [lightColor],
                                        strokeColor: [baseColor],
                                        strokeWidth: 3
                                    }
                                };

                                var chart = new ApexCharts(element, options);
                                chart.render();
                            });
                        });
                    }
                    var DashboardAvg = function () {
                        var charts = document.querySelectorAll('.mixed-widget-10-chart');

                        var color;
                        var height;
                        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');
                        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');
                        var baseLightColor;
                        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');
                        var baseColor;
                        var options;
                        var chart;
                        $.getJSON("/Intern/DashboarAtnAbs", function (data) {
                            [].slice.call(charts).map(function (element) {
                                color = element.getAttribute("data-kt-color");
                                height = parseInt(KTUtil.css(element, 'height'));
                                baseColor = KTUtil.getCssVariableValue('--bs-' + color);

                                options = {
                                    series: [{
                                        name: 'ATN',
                                        data: [data['jan'], data['feb'], data['mar'], data['apr'], data['mei'], data['jun'], data['jul'], data['aug'], data['sep'], data['oct'], data['nov'], data['dec']]
                                    }],
                                    chart: {
                                        fontFamily: 'inherit',
                                        type: 'bar',
                                        height: height,
                                        toolbar: {
                                            show: false
                                        }
                                    },
                                    plotOptions: {
                                        bar: {
                                            horizontal: false,
                                            columnWidth: ['50%'],
                                            borderRadius: 4
                                        },
                                    },
                                    legend: {
                                        show: false
                                    },
                                    dataLabels: {
                                        enabled: false
                                    },
                                    stroke: {
                                        show: true,
                                        width: 2,
                                        colors: ['transparent']
                                    },
                                    xaxis: {
                                        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                                        axisBorder: {
                                            show: false,
                                        },
                                        axisTicks: {
                                            show: false
                                        },
                                        labels: {
                                            style: {
                                                colors: labelColor,
                                                fontSize: '12px'
                                            }
                                        }
                                    },
                                    yaxis: {
                                        y: 0,
                                        offsetX: 0,
                                        offsetY: 0,
                                        labels: {
                                            style: {
                                                colors: labelColor,
                                                fontSize: '12px'
                                            }
                                        }
                                    },
                                    fill: {
                                        type: 'solid'
                                    },
                                    states: {
                                        normal: {
                                            filter: {
                                                type: 'none',
                                                value: 0
                                            }
                                        },
                                        hover: {
                                            filter: {
                                                type: 'none',
                                                value: 0
                                            }
                                        },
                                        active: {
                                            allowMultipleDataPointsSelection: false,
                                            filter: {
                                                type: 'none',
                                                value: 0
                                            }
                                        }
                                    },
                                    tooltip: {
                                        style: {
                                            fontSize: '12px'
                                        },
                                        y: {
                                            formatter: function (val) {
                                                return "" + val + ""
                                            }
                                        }
                                    },
                                    colors: [baseColor, secondaryColor],
                                    grid: {
                                        padding: {
                                            top: 10
                                        },
                                        borderColor: borderColor,
                                        strokeDashArray: 4,
                                        yaxis: {
                                            lines: {
                                                show: true
                                            }
                                        }
                                    }
                                };

                                chart = new ApexCharts(element, options);
                                chart.render();
                            });
                        });
                    }

                    // Follow button
                    var initUserFollowButton = function () {
                        var follow = document.querySelector('#kt_user_follow_button');

                        if (follow) {
                            follow.addEventListener('click', function (e) {
                                // Prevent default action
                                e.preventDefault();

                                // Show indicator
                                follow.setAttribute('data-kt-indicator', 'on');

                                // Disable button to avoid multiple click
                                follow.disabled = true;

                                // Check button state
                                if (follow.classList.contains("btn-success")) {
                                    setTimeout(function () {
                                        follow.removeAttribute('data-kt-indicator');
                                        follow.classList.remove("btn-success");
                                        follow.classList.add("btn-light");
                                        follow.querySelector(".svg-icon").classList.add("d-none");
                                        follow.querySelector(".indicator-label").innerHTML = 'Follow';
                                        follow.disabled = false;
                                    }, 1500);
                                } else {
                                    setTimeout(function () {
                                        follow.removeAttribute('data-kt-indicator');
                                        follow.classList.add("btn-success");
                                        follow.classList.remove("btn-light");
                                        follow.querySelector(".svg-icon").classList.remove("d-none");
                                        follow.querySelector(".indicator-label").innerHTML = 'Following';
                                        follow.disabled = false;
                                    }, 1000);
                                }
                            });
                        }
                    }

                    // Calendar
                    var initCalendarWidget1 = function () {
                        if (typeof FullCalendar === 'undefined' || !document.querySelector('#kt_calendar_widget_1')) {
                            return;
                        }

                        var todayDate = moment().startOf('day');
                        var YM = todayDate.format('YYYY-MM');
                        var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');
                        var TODAY = todayDate.format('YYYY-MM-DD');
                        var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');

                        var calendarEl = document.getElementById('kt_calendar_widget_1');
                        var calendar = new FullCalendar.Calendar(calendarEl, {
                            headerToolbar: {
                                left: 'prev,next today',
                                center: 'title',
                                right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
                            },

                            height: 800,
                            contentHeight: 780,
                            aspectRatio: 3,  // see: https://fullcalendar.io/docs/aspectRatio

                            nowIndicator: true,
                            now: TODAY + 'T09:25:00', // just for demo

                            views: {
                                dayGridMonth: { buttonText: 'month' },
                                timeGridWeek: { buttonText: 'week' },
                                timeGridDay: { buttonText: 'day' }
                            },

                            initialView: 'dayGridMonth',
                            initialDate: TODAY,

                            editable: true,
                            dayMaxEvents: true, // allow "more" link when too many events
                            navLinks: true,
                            events: [
                                {
                                    title: 'All Day Event',
                                    start: YM + '-01',
                                    description: 'Toto lorem ipsum dolor sit incid idunt ut',
                                    className: "fc-event-danger fc-event-solid-warning"
                                },
                                {
                                    title: 'Reporting',
                                    start: YM + '-14T13:30:00',
                                    description: 'Lorem ipsum dolor incid idunt ut labore',
                                    end: YM + '-14',
                                    className: "fc-event-success"
                                },
                                {
                                    title: 'Company Trip',
                                    start: YM + '-02',
                                    description: 'Lorem ipsum dolor sit tempor incid',
                                    end: YM + '-03',
                                    className: "fc-event-primary"
                                },
                                {
                                    title: 'ICT Expo 2017 - Product Release',
                                    start: YM + '-03',
                                    description: 'Lorem ipsum dolor sit tempor inci',
                                    end: YM + '-05',
                                    className: "fc-event-light fc-event-solid-primary"
                                },
                                {
                                    title: 'Dinner',
                                    start: YM + '-12',
                                    description: 'Lorem ipsum dolor sit amet, conse ctetur',
                                    end: YM + '-10'
                                },
                                {
                                    id: 999,
                                    title: 'Repeating Event',
                                    start: YM + '-09T16:00:00',
                                    description: 'Lorem ipsum dolor sit ncididunt ut labore',
                                    className: "fc-event-danger"
                                },
                                {
                                    id: 1000,
                                    title: 'Repeating Event',
                                    description: 'Lorem ipsum dolor sit amet, labore',
                                    start: YM + '-16T16:00:00'
                                },
                                {
                                    title: 'Conference',
                                    start: YESTERDAY,
                                    end: TOMORROW,
                                    description: 'Lorem ipsum dolor eius mod tempor labore',
                                    className: "fc-event-primary"
                                },
                                {
                                    title: 'Meeting',
                                    start: TODAY + 'T10:30:00',
                                    end: TODAY + 'T12:30:00',
                                    description: 'Lorem ipsum dolor eiu idunt ut labore'
                                },
                                {
                                    title: 'Lunch',
                                    start: TODAY + 'T12:00:00',
                                    className: "fc-event-info",
                                    description: 'Lorem ipsum dolor sit amet, ut labore'
                                },
                                {
                                    title: 'Meeting',
                                    start: TODAY + 'T14:30:00',
                                    className: "fc-event-warning",
                                    description: 'Lorem ipsum conse ctetur adipi scing'
                                },
                                {
                                    title: 'Happy Hour',
                                    start: TODAY + 'T17:30:00',
                                    className: "fc-event-info",
                                    description: 'Lorem ipsum dolor sit amet, conse ctetur'
                                },
                                {
                                    title: 'Dinner',
                                    start: TOMORROW + 'T05:00:00',
                                    className: "fc-event-solid-danger fc-event-light",
                                    description: 'Lorem ipsum dolor sit ctetur adipi scing'
                                },
                                {
                                    title: 'Birthday Party',
                                    start: TOMORROW + 'T07:00:00',
                                    className: "fc-event-primary",
                                    description: 'Lorem ipsum dolor sit amet, scing'
                                },
                                {
                                    title: 'Click for Google',
                                    url: 'http://google.com/',
                                    start: YM + '-28',
                                    className: "fc-event-solid-info fc-event-light",
                                    description: 'Lorem ipsum dolor sit amet, labore'
                                }
                            ]
                        });

                        calendar.render();
                    }

                    // Daterangepicker
                    var initDaterangepicker = function () {
                        if (!document.querySelector('#kt_dashboard_daterangepicker')) {
                            return;
                        }

                        var picker = $('#kt_dashboard_daterangepicker');
                        var start = moment();
                        var end = moment();

                        function cb(start, end, label) {
                            var title = '';
                            var range = '';

                            if ((end - start) < 100 || label == 'Today') {
                                title = 'Today:';
                                range = start.format('MMM D');
                            } else if (label == 'Yesterday') {
                                title = 'Yesterday:';
                                range = start.format('MMM D');
                            } else {
                                range = start.format('MMM D') + ' - ' + end.format('MMM D');
                            }

                            $('#kt_dashboard_daterangepicker_date').html(range);
                            $('#kt_dashboard_daterangepicker_title').html(title);
                        }

                        picker.daterangepicker({
                            direction: KTUtil.isRTL(),
                            startDate: start,
                            endDate: end,
                            opens: 'left',
                            applyClass: 'btn-primary',
                            cancelClass: 'btn-light-primary',
                            ranges: {
                                'Today': [moment(), moment()],
                                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                                'This Month': [moment().startOf('month'), moment().endOf('month')],
                                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                            }
                        }, cb);

                        cb(start, end, '');
                    }

                    // Dark mode toggler
                    var initDarkModeToggle = function () {
                        var toggle = document.querySelector('#kt_user_menu_dark_mode_toggle');

                        if (toggle) {
                            toggle.addEventListener('click', function () {
                                window.location.href = this.getAttribute('data-kt-url');
                            });
                        }
                    }

                    // Public methods
                    return {
                        init: function () {
                            // Daterangepicker
                            initDaterangepicker();

                            // Dark Mode
                            initDarkModeToggle();

                            // Mixed widgets
                            DashboardAbsLate();
                            DashboardHalfDay();
                            DashboardAvg();


                            // Follow button
                            initUserFollowButton();

                            // Calendar
                            initCalendarWidget1();
                        }
                    }
                }();

                // Webpack support
                if (typeof module !== 'undefined') {
                    module.exports = KTWidgets;
                }

                // On document ready
                KTUtil.onDOMContentLoaded(function () {
                    KTWidgets.init();
                });
            </script>
        }
    </div>
    <!--end::Container-->
</div>
<!--end::Post-->
