@model IEnumerable<HRIS_Employee.Models.MST_EMPLOYEE>

@{ ViewBag.Title = "GetAttendance"; Layout = "~/Views/Shared/_dashboard.cshtml"; }
<div class="row ">
    <div class="col-lg-12 ">
        <div class="card">
            @ViewBag.term_end
            
            <div class="card-body">
                @if (ViewBag.Message == "upload-data-success")
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <strong>Success!</strong> Updated Data.
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                }
                else if (ViewBag.Message != null)
                {
                    <div class="alert alert-warning alert-dismissible fade show" role="alert">
                        <strong>Error!</strong> @ViewBag.Message !!!
                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                }
               
                <div class="row mt-2">
                    <div class="col-lg-12">

                        <button class="btn btn-default  btn-icon-text" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
                            <i class="btn-icon-prepend" data-feather="list"></i>
                            Filter
                        </button>

                            @if (Session["permission_5"] != null)
                        {
                       
                            <button type="button" class="btn btn-primary  btn-icon-text" data-toggle="modal" data-target=".bd-example-modal-lg">
                                <i class="btn-icon-prepend bg-danger" data-feather="upload"></i>
                                Upload data
                            </button>
                            <button class="btn btn-primary  btn-icon-text" type="button" id="export_to_excel">
                                <i class="btn-icon-prepend bg-success" data-feather="download"></i>
                                Export to excel
                            </button>
                            <button class="btn btn-primary  btn-icon-text" type="button" id="sycn__data">
                                <i class="btn-icon-prepend bg-primary" data-feather="refresh-cw"></i>
                                Sync Data From AS400
                            </button>
                            <span style="display: none;" id="totalHoursDiplasy"></span>


                        }
                        <div class="collapse" id="collapseExample">
                            <div class="card">
                                @using (Html.BeginForm())
                                {
                                    <div class="card-body">
                                        <div class="row">

                                            @if (Session["username"] != null)
                                            {

                                                <div class="input-group date datepicker dashboard-date mr-2 mb-2 mb-md-0 d-md-none d-xl-flex" id="dashboardDate">
                                                    <span class="input-group-addon bg-transparent"><i data-feather="terminal" class=" text-primary"></i></span>
                                                    <input type="hidden" id="term_start" value="" name="term_start">
                                                    <input type="hidden" id="term_end" value="" name="term_end">
                                                    <input type="number" id="kpk" value="" name="kpk" maxlength="6" oninput="javascript: if(this.value.length > this.max.length) this.value = this.value.slice(0, this.maxLength);" min="5" class="form-control" placeholder="Enter KPK">
                                                </div>
                                                <div class="input-group date datepicker dashboard-date mr-2 mb-2 mb-md-0 d-md-none d-xl-flex" id="dashboardDate">
                                                    <span class="input-group-addon bg-transparent"><i data-feather="calendar" class=" text-primary"></i></span>
                                                    <select name="" id="month_filter" class="form-control-sm" onchange="check_Date()">
                                                        <option value="1222">January</option>
                                                        <option value="0122">February</option>
                                                        <option value="0222">March</option>
                                                        <option value="0322">April</option>
                                                        <option value="0422">May</option>
                                                        <option value="0522">June</option>
                                                        <option value="0622">July</option>
                                                        <option value="0722">August</option>
                                                        <option value="0822">September</option>
                                                        <option value="0922">October</option>
                                                        <option value="1022">November</option>
                                                        <option value="1122">December</option>
                                                    </select>
                                                </div>
                                                <div class="input-group date datepicker dashboard-date mr-2 mb-2 mb-md-0 d-md-none d-xl-flex" id="dashboardDate">
                                                    <span class="input-group-addon bg-transparent"><i data-feather="calendar" class=" text-primary"></i></span>
                                                    <select name="" id="years_filter" class="form-control-sm" onchange="check_Date()">
                                                        <option value="2020">2020</option>
                                                        <option value="2021">2021</option>
                                                        <option value="2022">2022</option>
                                                        <option value="2023">2023</option>
                                                        <option value="2024">2024</option>
                                                        <option value="2025">2025</option>
                                                        <option value="2026">2026</option>
                                                        <option value="2027">2027</option>
                                                        <option value="2028">2028</option>
                                                        <option value="2029">2029</option>
                                                        <option value="2030">2030</option>
                                                    </select>
                                                </div>
                                                <div class="input-group date datepicker dashboard-date mr-2 mb-2 mb-md-0 d-md-none d-xl-flex" id="dashboardDate">
                                                    <span class="input-group-addon bg-transparent"><i data-feather="users" class=" text-primary"></i></span>
                                                    @Html.DropDownList("Departement_code", null, htmlAttributes: new { @class = "form-control-sm", id = "departement" })
                                                </div>
                                                <div class="input-group date datepicker dashboard-date mr-2 mb-2 mb-md-0 d-md-none d-xl-flex" id="dashboardDate">
                                                    <span class="input-group-addon bg-transparent"><i data-feather="list" class=" text-primary"></i></span>
                                                    @Html.DropDownList("section_code", null, htmlAttributes: new { @class = "form-control-sm", id = "Section_attendance" })
                                                </div>
                                                <div class="input-group date datepicker dashboard-date mr-2 mb-2 mb-md-0 d-md-none d-xl-flex" id="dashboardDate">
                                                    <span class="input-group-addon bg-transparent"><i data-feather="calendar" class=" text-primary"></i></span>
                                                    <select id="EmployeeStatus" name="EmployeeStatus" class="form-control-sm" required>
                                                        <option value="D" selected>Non-Staff</option>
                                                        <option value="M">Staff</option>
                                                    </select>
                                                </div>
                                                <input id="getStatusEmployee" type="hidden" name="getStatusEmployee">

                                            }
                                            else
                                            {
                                                <input type="hidden" id="term_end" value="" name="term_end">
                                                <input type="hidden" id="term_start" value="" name="term_start">
                                                <input type="hidden" id="kpk" name="kpk" maxlength="6" value="@Session["username"].ToString()">

                                                <div class="input-group date datepicker dashboard-date mr-2 mb-2 mb-md-0 d-md-none d-xl-flex" id="dashboardDate">
                                                    <span class="input-group-addon bg-transparent"><i data-feather="calendar" class=" text-primary"></i></span>
                                                    <select name="" id="month_filter" class="form-control-sm" onchange="check_Date()" required>
                                                        <option value="1222" selected>January</option>
                                                        <option value="0122">February</option>
                                                        <option value="0222">March</option>
                                                        <option value="0322">April</option>
                                                        <option value="0422">May</option>
                                                        <option value="0522">June</option>
                                                        <option value="0622">July</option>
                                                        <option value="0722">August</option>
                                                        <option value="0822">September</option>
                                                        <option value="0922">October</option>
                                                        <option value="1022">November</option>
                                                        <option value="1122">December</option>
                                                    </select>
                                                </div>
                                                <div class="input-group date datepicker dashboard-date mr-2 mb-2 mb-md-0 d-md-none d-xl-flex" id="dashboardDate">
                                                    <span class="input-group-addon bg-transparent"><i data-feather="calendar" class=" text-primary"></i></span>
                                                    <select name="" id="years_filter" class="form-control-sm" onchange="check_Date()" required>
                                                        <option value="2020" selected>2020</option>
                                                        <option value="2021">2021</option>
                                                        <option value="2022">2022</option>
                                                        <option value="2023">2023</option>
                                                        <option value="2024">2024</option>
                                                        <option value="2025">2025</option>
                                                        <option value="2026">2026</option>
                                                        <option value="2027">2027</option>
                                                        <option value="2028">2028</option>
                                                        <option value="2029">2029</option>
                                                        <option value="2030">2030</option>
                                                    </select>
                                                </div>

                                            }
                                            <button type="submit" class="btn btn-primary btn-icon-text">
                                                <i class="btn-icon-prepend" data-feather="arrow-right-circle"></i>
                                                Show
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="d-flex justify-content-between align-items-center flex-wrap grid-margin">
                            <div class="d-flex align-items-center flex-wrap text-nowrap">
                                <!-- Modal for show form upload file -->
                                <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
                                    <div class="modal-dialog ">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="exampleModalLabel">Upload data <br><span class="text-muted">.Excel Only</span></h5>
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="modal-body">
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        @using (Html.BeginForm("UploadAbsentSheet", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", id = "form-2" }))
                                                        {
                                                            <div class="form-group" class="float-left">
                                                                <label for="">Upload Absent Sheet </label>
                                                                <input type="file" id="postedFile1" name="postedFile" class="form-control-file" required>
                                                                <br>
                                                                <button class="file-upload-browse attendance_absent btn btn-primary" type="submit" id="upload_attendance_absent">Upload</button>
                                                            </div>
                                                        }
                                                    </div>
                                                    <div class="col-md-6">
                                                        @using (Html.BeginForm("UploadScanSheet", "Employee", FormMethod.Post, new { enctype = "multipart/form-data", id = "form" }))
                                                        {
                                                            <div class="form-group" class="float-left">
                                                                <label for="">Upload  Scan  Sheet </label>
                                                                <input type="file" id="postedFile2" name="postedFile" class="form-control-file" required>
                                                                <br>
                                                                <button class="file-upload-browse attendance_master btn btn-primary" type="submit" id="upload_attendance_master">Upload</button>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="table-responsive">
                        <table class="table table-bordered " id="employee_table">
                            <thead id="trs">
                                <tr>
                                    <th rowspan="2">
                                        KPK
                                    </th>
                                    <th class="text-center" rowspan="2">
                                        Name
                                    </th>
                                    <th class="text-center" colspan="2">
                                        <i data-feather="calendar"></i>
                                    </th>
                                    <th colspan="4" class="text-center">
                                        Shift
                                    </th>
                                    <th colspan="2" class="text-center">
                                        Actual
                                    </th>
                                    <th colspan="2" class="text-center">
                                        RKL EARLY
                                    </th>
                                    <th colspan="2" class="text-center">
                                        RKL late
                                    </th>
                                    <th rowspan="2" class="text-center">Overtime</th>

                                    <th class="text-center" rowspan="2">Work Hours</th>
                                    <th class="text-center" rowspan="2">Status</th>

                                </tr>
                                <tr>
                                    <th class="text-center">date</th>
                                    <th class="text-center">day</th>
                                    <th class="text-center">IN</th>
                                    <th class="text-center ">OUT</th>
                                    <th class="text-center">SHIFT</th>
                                    <th class="text-center">WG</th>
                                    <th class="text-center ">IN</th>
                                    <th class="text-center ">OUT</th>
                                    <th class="text-center">IN</th>
                                    <th class="text-center">OUT</th>
                                    <th class="text-center">IN</th>
                                    <th class="text-center">OUT</th>
                                </tr>
                            </thead>
                            @if (Model != null)
                            {

                                foreach (var item in Model)
                                {
                                    if (ViewBag.getKey != null)
                                    {

                                      
                                        var getDate = ViewBag.getMonths+"/"+ViewBag.getDates+"/"+ViewBag.getYears;
                                      
                                    

                                         DateTime getStart =  DateTime.Parse(getDate);
                                        string convertToString = getStart.ToString("MM-dd-yyyy");
                                        DateTime fromDate = DateTime.Parse(convertToString);
                                        // check
                                   
                                       DateTime toDate = new DateTime(Int32.Parse(ViewBag.getYear), Int32.Parse(ViewBag.getMonth), Int32.Parse("30"));
                                        fromDate = fromDate.AddDays(-1);
                                      while (fromDate < toDate)
                                        {
                                            fromDate = fromDate.AddDays(1);
                                            <body>
                                                <tr id="employee_tabletr">

                                                    <td>@(item.employee_code)</td>
                                                    <td>@(item.employee_name)</td>
                                                    @if (fromDate.ToString("ddd") == "Sat")
                                                    {
                                                        <td class="bg-light">@(fromDate.ToString("dd/MM/yyyy")) </td>
                                                    }
                                                    else if (fromDate.ToString("ddd") == "Sun")

                                                    {
                                                        <td class="bg-light">@(fromDate.ToString("dd/MM/yyyy")) </td>

                                                    }
                                                    else if (item.Date_public_holidays != null)
                                                    {
                                                        if (item.Date_public_holidays.Any(fromDate.ToString("yyyyMMdd").Contains))
                                                        {
                                                            var date_time = Html.DisplayFor(modelItem => item.Date_public_holidays).ToHtmlString().Substring(6, 2) + '/' + Html.DisplayFor(modelItem => item.Date_public_holidays).ToHtmlString().Substring(4, 2) + '/' + Html.DisplayFor(modelItem => item.Date_public_holidays).ToHtmlString().Substring(0, 4);
                                                            <td>  @date_time </td>
                                                        }

                                                    }


                                                    else
                                                    {
                                                        <td class="">@(fromDate.ToString("dd/MM/yyyy")) </td>

                                                    }
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                    <td></td>
                                                </tr>
                                            </body>
                                        }  
                                    }
                                    else
                                    {
                                        <tbody>
                                            <tr id="employee_tabletr">

                                                @* display kpk *@
                                                <td id="employee_code_real">
                                                    @Html.DisplayFor(modelItem => item.employee_code)
                                                </td>

                                                @* diplay employee name *@
                                                <td id="employee_code_name">
                                                    @Html.DisplayFor(modelItem => item.employee_name)
                                                </td>

                                                @* check public holiday *@
                                                @if (item.Date_public_holidays != null)
                                                {
                                                    var date_time = Html.DisplayFor(modelItem => item.Date_public_holidays).ToHtmlString().Substring(6, 2) + '/' + Html.DisplayFor(modelItem => item.Date_public_holidays).ToHtmlString().Substring(4, 2) + '/' + Html.DisplayFor(modelItem => item.Date_public_holidays).ToHtmlString().Substring(0, 4);
                                                    <td>  @date_time </td>
                                                }
                                                else if (item.date != null)
                                                {
                                                    var date_time = Html.DisplayFor(modelItem => item.date).ToHtmlString().Substring(6, 2) + '/' + Html.DisplayFor(modelItem => item.date).ToHtmlString().Substring(4, 2) + '/' + Html.DisplayFor(modelItem => item.date).ToHtmlString().Substring(0, 4);

                                                    // var date_final_2 =  DateTime.ParseExact(date_time, "MM/dd//yyyy", null);
                                                    <td id="last_attendance">@date_time</td>
                                                }

                                                @* check status employee *@
                                                @if (@ViewBag.getStatusEmployee == "D")
                                                {
                                                    @* diplay shift *@
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.shift)
                                                    </td>
                                                    @* display start at *@
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.start_at)
                                                    </td>
                                                    if (item.end_at == "7:10")
                                                    {
                                                        <td>
                                                            @("0" + item.end_at)
                                                        </td>

                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.end_at)
                                                        </td>
                                                    }

                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.actual_shift)
                                                    </td>

                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.wg)
                                                    </td>





                                                    @* check clock in *@
                                                    @*
                                                // how to change font-color if the clock in less than 14 minutes or more than 14 minutes expect overtime

                                                    *@
                                                    if (item.clock_in != null)
                                                    {
                                                        if (item.actual_shift == "1")
                                                        {
                                                            if (Int32.Parse(item.clock_in) < 222600 || Int32.Parse(item.clock_in) > 225500 && Int32.Parse(item.overtime_in) < 90)
                                                            {
                                                                <td class="text-danger">
                                                                    @(item.clock_in.Substring(0, 2)):@(""+ item.clock_in.Substring(2, 2))
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td>
                                                                    @(item.clock_in.Substring(0, 2)):@(""+ item.clock_in.Substring(2, 2))
                                                                </td>
                                                            }

                                                        }
                                                        else if (item.actual_shift == "2")
                                                        {
                                                            if (Int32.Parse(item.clock_in) < 65600)
                                                            {
                                                                <td class="text-danger">
                                                                    @("0" + item.clock_in.Substring(0, 1)):@(""+ item.clock_in.Substring(1, 2))
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td>
                                                                    @("0" + item.clock_in.Substring(0, 1)):@(""+ item.clock_in.Substring(1, 2))
                                                                </td>
                                                            }
                                                        }
                                                        else if (item.actual_shift == "3")
                                                        {
                                                            if (Int32.Parse(item.clock_in) < 152600 && Int32.Parse(item.clock_in) > 155400 && Int32.Parse(item.overtime_in) < 90)
                                                            {
                                                                <td class="text-danger">
                                                                    @(item.clock_in.Substring(0, 2)):@(""+ item.clock_in.Substring(2, 2))
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td>
                                                                    @(item.clock_in.Substring(0, 2)):@(""+ item.clock_in.Substring(2, 2))
                                                                </td>
                                                            }
                                                        }


                                                    }
                                                    else
                                                    {
                                                        <td>@item.clock_in </td>
                                                    }





                                                    if (item.clock_out != null && Int32.Parse(item.clock_out) <= 90000)
                                                    {
                                                        <td>
                                                            @("0" + item.clock_out.Substring(0, 1)):@("0" + item.clock_out.Substring(2, 1))
                                                        </td>
                                                    }
                                                    else if (item.clock_out != null && Int32.Parse(item.clock_out) >= 90000)
                                                    {
                                                        <td>@Html.DisplayFor(modelItem => item.clock_out).ToHtmlString().Substring(0, 2):@Html.DisplayFor(modelItem => item.clock_out).ToHtmlString().Substring(2, 2) </td>
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.clock_out)
                                                        </td>
                                                    }




                                                    if (item.clock_in != null && item.actual_shift != null && item.overtime_in != null)
                                                    { // start RKL Condition
                                                        if (Int32.Parse(item.actual_shift) == 1 && Int32.Parse(item.overtime_in) > 130)
                                                        {   //
                                                            <td>

                                                                20:30
                                                            </td>
                                                            <td>
                                                                22:40
                                                            </td>

                                                            <td>
                                                                06:10
                                                            </td>
                                                            <td>
                                                                @("0" + item.overtime_out.Substring(0, 1)):@("0" + item.overtime_out.Substring(2, 1))
                                                            </td>

                                                        }
                                                        else if (Int32.Parse(item.actual_shift) == 1)
                                                        {
                                                            <td>
                                                            </td>
                                                            <td>
                                                            </td>

                                                            <td>
                                                                06:10
                                                            </td>
                                                            <td>
                                                                @("0" + item.overtime_out.Substring(0, 1)):@("0" + item.overtime_out.Substring(2, 1))
                                                            </td>

                                                        }

                                                        else if (Int32.Parse(item.actual_shift) == 2 && Int32.Parse(item.overtime_in) >= 50 && Int32.Parse(item.overtime_in) <= 130)
                                                        {
                                                            <td>
                                                            </td>
                                                            <td>
                                                            </td>

                                                            <td>

                                                                14:40
                                                            </td>
                                                            <td>
                                                                @("" + item.overtime_out.Substring(0, 2)):@("" + item.overtime_out.Substring(2, 2))
                                                            </td>
                                                        }
                                                        else if (Int32.Parse(item.actual_shift) == 2 && Int32.Parse(item.overtime_in) >= 140 && Int32.Parse(item.overtime_in) <= 180)
                                                        {
                                                            <td>
                                                            </td>
                                                            <td>
                                                            </td>

                                                            <td>

                                                                12:40
                                                            </td>
                                                            <td>
                                                                @("" + item.overtime_out.Substring(0, 2)):@("" + item.overtime_out.Substring(2, 2))
                                                            </td>
                                                        }



                                                        else if (Int32.Parse(item.actual_shift) == 2 && Int32.Parse(item.overtime_in) <= 50)
                                                        {
                                                            <td>
                                                            </td>
                                                            <td>
                                                            </td>

                                                            <td>
                                                            </td>
                                                            <td>
                                                            </td>
                                                        }
                                                        else if (Int32.Parse(item.actual_shift) == 3 && Int32.Parse(item.overtime_in) >= 90 && Int32.Parse(item.overtime_in) < 100)
                                                        {
                                                            <td>
                                                                14:10
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.clock_in).ToHtmlString().Substring(0, 2):@Html.DisplayFor(modelItem => item.clock_in).ToHtmlString().Substring(2, 2)
                                                            </td>

                                                            <td>
                                                            </td>
                                                            <td>
                                                            </td>
                                                        }
                                                        else if (Int32.Parse(item.actual_shift) == 3)
                                                        {
                                                            <td>
                                                            </td>
                                                            <td>
                                                            </td>

                                                            <td>
                                                            </td>
                                                            <td>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.clock_in)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.overtime_out)
                                                            </td>

                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.clock_in)
                                                            </td>
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.overtime_out)
                                                            </td>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.clock_in)
                                                        </td>
                                                        <td>
                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.clock_in)
                                                        </td>
                                                        <td>
                                                        </td>



                                                        // end RKL Condition
                                                    }





                                                    if (item.overtime_in != null && item.overtime_in != "")
                                                    {
                                                        if (Int32.Parse(item.overtime_in) < 0)
                                                        {
                                                            <td class="text-danger">
                                                                @Html.DisplayFor(modelItem => item.overtime_in)
                                                            </td>
                                                        }
                                                        else if (Int32.Parse(item.overtime_in) > 0)
                                                        {
                                                            <td>
                                                                @Html.DisplayFor(modelItem => item.overtime_in) Minutes
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td></td>
                                                        }
                                                    }

                                                    else
                                                    {
                                                        <td>
                                                            @(item.overtime_in )
                                                        </td>
                                                    }


                                                    @*start get range between two datetime
                                                bug = when clock in less than 7 in the morning
                                                Rules
                                                [ check shift 2 check clock in <= 07:00]*@

                                                    if (item.Working_hours != null)
                                                    {
                                                        if (Int32.Parse(item.clock_in) < 70000 && Int32.Parse(item.clock_out) < 162000 && item.actual_shift == "2")
                                                        {
                                                            //solution
                                                            // get range from clock in to 07:00
                                                            var ClockInDiffereces = 70000 - Int32.Parse(item.clock_in);
                                                            // change clock in to 07:00
                                                            var actualClockIn = 70000;
                                                            // add the differences value to clock out
                                                            var UpdateClockOut = Int32.Parse(item.clock_out) + Int32.Parse(ClockInDiffereces.ToString().Substring(1, 3));
                                                            // and... got it it will work perfectly
                                                            // that's what i call smartpeople
                                                            var actualWorking = UpdateClockOut - actualClockIn - 3000;
                                                            <td class="countWorkingHours">
                                                                @("0"  +  actualWorking.ToString().Substring(0, 1)):@(actualWorking.ToString().Substring(1, 2) )
                                                            </td>
                                                        }
                                                        else if (Int32.Parse(item.clock_out) > 172000 && item.actual_shift == "2")
                                                        {
                                                            var actualWorking = Int32.Parse(item.clock_out) - 70000 - 3000 + Int32.Parse(item.clock_in.Substring(2, 3));

                                                            if (actualWorking > 99900)
                                                            {
                                                                <td class="countWorkingHours">
                                                                    @(actualWorking.ToString().Substring(0,2)+":"+actualWorking.ToString().Substring(2,2))
                                                                </td>
                                                            }
                                                            else
                                                            {

                                                                var bencmark = 1000;
                                                                int getRangeBencmark1 = bencmark - actualWorking;
                                                                int getRangeBencmark = bencmark - Int32.Parse(actualWorking.ToString().Substring(0, 3));
                                                                int updateActualWorking = Int32.Parse(item.clock_out) - 70000 - 3000 + getRangeBencmark1 + Int32.Parse(item.clock_in.Substring(2, 3));
                                                                TimeSpan hour = TimeSpan.FromHours(Int32.Parse(updateActualWorking.ToString().Substring(0, 2)));
                                                                DateTime hours_semi = Convert.ToDateTime(hour.ToString());
                                                                TimeSpan sec = TimeSpan.FromMinutes(getRangeBencmark);
                                                                DateTime sec_semi = Convert.ToDateTime(sec.ToString());
                                                                TimeSpan diff = hours_semi - sec_semi;
                                                                <td class="countWorkingHours">
                                                                    @diff.ToString().Substring(0, 5) 
                                                                </td>

                                                            }

                                                        }
                                                        else if (item.actual_shift == "2")
                                                        {
                                                            var actualWorking = Int32.Parse(item.clock_out) - Int32.Parse(item.clock_in) - 3000;
                                                            <td class="countWorkingHours">
                                                                @("0"  +  actualWorking.ToString().Substring(0, 1)):@(actualWorking.ToString().Substring(1, 2) )
                                                            </td>

                                                        }
                                                        else if (item.actual_shift == "1")
                                                        {



                                                            // get range from clock in to 07:00  (Hours) and split up minutes
                                                            var ClockInDifferecesHours = 23 - Int32.Parse(item.clock_in.ToString().Substring(0, 2));
                                                            // get clock in minutes
                                                            var ClockInDifferecesMinutes = 60 - Int32.Parse(item.clock_in.ToString().Substring(2, 2));
                                                            var ClockInDiffereces = ClockInDifferecesHours + "" + ClockInDifferecesMinutes;
                                                            var ChangeClockInDifferences = ClockInDiffereces + "00";

                                                            // change clock in to 07:00
                                                            var actualClockIn = 240000;
                                                            // add the differences value to clock out
                                                            var UpdateClockOut = Int32.Parse(item.clock_out) + Int32.Parse(ChangeClockInDifferences.ToString()) - 3000;
                                                            // and... got it it will work perfectly

                                                            // that's what i call smartpeople
                                                            if (UpdateClockOut.ToString().Length >= 6)
                                                            {
                                                                <td class="countWorkingHours">

                                                                    @(UpdateClockOut.ToString().Substring(0,2)+":"+UpdateClockOut.ToString().Substring(2,2))
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td class="countWorkingHours">
                                                                    @("0"+UpdateClockOut.ToString().Substring(0,1)+":"+UpdateClockOut.ToString().Substring(1,2))
                                                                </td>

                                                            }

                                                        }
                                                        else if (item.actual_shift == "3")
                                                        {


                                                            int getHoursClock_in = @Int32.Parse(item.clock_in.Substring(0, 2));
                                                            int getHoursClock_out = @Int32.Parse(item.clock_out.Substring(0, 2));
                                                            int getMinutesClock_in = @Int32.Parse(item.clock_in.Substring(2, 2));
                                                            int getMinutesClock_out = @Int32.Parse(item.clock_out.Substring(2, 2));
                                                            var getTotalBreak = TimeSpan.FromMinutes(30);
                                                            var getTotalHours = TimeSpan.FromHours(getHoursClock_out) - TimeSpan.FromHours(getHoursClock_in);
                                                            var getTotalMinutes = TimeSpan.FromMinutes(getMinutesClock_out) - TimeSpan.FromMinutes(getMinutesClock_in);
                                                            var getTotal = (getTotalHours + getTotalMinutes - getTotalBreak).Minutes;
                                                            var getTotalA = (getTotalHours + getTotalMinutes - getTotalBreak).Hours;
                                                            <td class="countWorkingHours">
                                                                @* var final = DateTime.ParseExact(getTotal, "HH:mm", CultureInfo.InvariantCulture) *@
                                                                @* @("0"+actualWorking.ToString().Substring(0, 1)):@(actualWorking.ToString().Substring(1, 2) ) *@
                                                                @("0"+getTotalA+":"+getTotal )
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            var actualWorking = Int32.Parse(item.clock_out) - Int32.Parse(item.clock_in) - 3000;
                                                            if (actualWorking >= 100000)
                                                            {
                                                                <td class="countWorkingHours">
                                                                    @(actualWorking.ToString().Substring(0, 2)):@(actualWorking.ToString().Substring(2, 2) )
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td class="countWorkingHours">
                                                                    @("0"  +  actualWorking.ToString().Substring(0, 1)):@(actualWorking.ToString().Substring(1, 2) )
                                                                </td>
                                                            }

                                                        }



                                                    }
                                                    else
                                                    {
                                                        <td class="countWorkingHours">
                                                        </td>
                                                    }




                                                    if (item.status == "ABS")
                                                    {
                                                        <td>
                                                            <span class="badge badge-danger">@Html.DisplayFor(modelItem => item.status)</span>
                                                        </td>
                                                    }
                                                    else if (item.Date_public_holidays != null)
                                                    {

                                                        <td class="">
                                                            <span class="badge badge-danger"> @Html.DisplayFor(modelItem => item.Date_description) </span>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.status)
                                                        </td>
                                                    }

                                                }






                                                @* display absen for staff start at date*@
                                                else if (@ViewBag.getStatusEmployee == "M")
                                                {
                                                    @* diplay shift *@
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.shift)
                                                    </td>
                                                    @* diplay actual in *@
                                                    <td>
                                                        08:00
                                                    </td>
                                                    @* dipslay actual out *@
                                                    <td>
                                                        17:00
                                                    </td>

                                                    <td>
                                                    </td>
                                                    <td>
                                                    </td>




                                                    @*
                                                make sure that clock in and clock out is not null
                                                    *@
                                                    if (item.clock_in != null && item.clock_out != null)
                                                    {
                                                        @*
                                                    Sum value from clock in,clock out and break and then assign to varable getWorkingHours
                                                        *@
                                                        var getWorkingHours = Int32.Parse(item.clock_out) - Int32.Parse(item.clock_in) - 10000;
                                                        @* End sum *@

                                                        @*
                                                    find out when the time employee  clock in
                                                        *@
                                                        //Morning
                                                        if (Int32.Parse(item.clock_in) < 100000 && Int32.Parse(item.clock_out) > 100000)
                                                        {
                                                            <td>
                                                                @("0"+item.clock_in.Substring(0,1)+":"+item.clock_in.Substring(1,2))
                                                            </td>
                                                            <td>
                                                                @(item.clock_out.Substring(0,2)+":"+item.clock_out.Substring(2,2))
                                                            </td>
                                                        }
                                                        // night
                                                        else if (Int32.Parse(item.clock_in) > 100000 && Int32.Parse(item.clock_out) < 100000)
                                                        {
                                                            <td>
                                                                @(item.clock_in.Substring(0,2)+":"+item.clock_in.Substring(2,2))
                                                            </td>
                                                            <td>
                                                                @(item.clock_out.Substring(0,1)+":"+item.clock_out.Substring(1,2))
                                                            </td>
                                                        }
                                                        // bug detection
                                                        else
                                                        {
                                                            <td>
                                                                @(item.clock_in.Substring(0,2)+":"+item.clock_in.Substring(1,2))
                                                            </td>
                                                            <td>
                                                                @(item.clock_out.Substring(0,2)+":"+item.clock_out.Substring(2,2))
                                                            </td>
                                                        }
                                                        @* end find out *@


                                                    }
                                                    @* data not found *@
                                                    else
                                                    {
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.clock_in)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.clock_out)
                                                        </td>
                                                    }
                                                    <td>
                                                    </td>
                                                    <td>
                                                    </td>
                                                    <td>
                                                    </td>
                                                    <td>
                                                    </td>
                                                    <td>
                                                    </td>







                                                    @* // check clock out and clock in *@
                                                    if (item.clock_out != null && item.clock_in != null)
                                                    {

                                                        @* // get actual working hours *@
                                                        var Working_hours = Int32.Parse(item.clock_out) - Int32.Parse(item.clock_in) - 10000;

                                                        @*  // check working hours (if true then fill red color to the text)  *@
                                                        if (Int32.Parse(item.clock_in) > 100000 && Int32.Parse(item.clock_out) < 100000)
                                                        {
                                                            // get range from clock in to 07:00  (Hours) and split up minutes
                                                            var ClockInDifferecesHours = 23 - Int32.Parse(item.clock_in.ToString().Substring(0, 2));
                                                            // get clock in minutes
                                                            var ClockInDifferecesMinutes = 60 - Int32.Parse(item.clock_in.ToString().Substring(2, 2));
                                                            var ClockInDiffereces = ClockInDifferecesHours + "" + ClockInDifferecesMinutes;
                                                            var ChangeClockInDifferences = ClockInDiffereces + "00";

                                                            // change clock in to 07:00
                                                            var actualClockIn = 240000;
                                                            // add the differences value to clock out
                                                            var UpdateClockOut = Int32.Parse(item.clock_out) + Int32.Parse(ChangeClockInDifferences.ToString()) - 3000;
                                                            // and... got it it will work perfectly

                                                            // that's what i call smartpeople
                                                            if (UpdateClockOut.ToString().Length >= 6)
                                                            {
                                                                <td>

                                                                    @(UpdateClockOut.ToString().Substring(0,2)+":"+UpdateClockOut.ToString().Substring(2,2))
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td>
                                                                    @("0"+UpdateClockOut.ToString().Substring(0,1)+":"+UpdateClockOut.ToString().Substring(1,2))
                                                                </td>

                                                            }
                                                        }
                                                        else if (Working_hours < 76000)
                                                        {

                                                            @*  // sum actual hours *@
                                                            var getWorkingHours = Int32.Parse(item.clock_out.Substring(0, 2)) - Int32.Parse(item.clock_in.Substring(0, 1)) - 1;
                                                            @*   // sum actual minutes *@
                                                            var getMinutes = Int32.Parse(item.clock_out.Substring(2, 2)) - Int32.Parse(item.clock_in.Substring(1, 2));

                                                            @*  // check result of sum minutes (if non-mines) *@
                                                            if (getMinutes < 0 && getMinutes.ToString().Length >= 3)
                                                            {
                                                                var totalHours = getWorkingHours + getMinutes;
                                                                var totalMinutes = 60 + getMinutes;
                                                                <td class="text-danger">
                                                                    @("0"+getWorkingHours+":"+getMinutes.ToString().Substring(1,2))
                                                                </td>
                                                                @*    // if mines   *@
                                                            }
                                                            else if (getMinutes < 0)
                                                            {
                                                                var totalHours = getWorkingHours + getMinutes;
                                                                var totalMinutes = 60 + getMinutes;
                                                                <td class="text-danger">
                                                                    @("0"+getWorkingHours+":0"+getMinutes.ToString().Substring(1,1))
                                                                </td>
                                                            }
                                                            @*  //  bug detection *@
                                                            else if (getMinutes.ToString().Length < 2)
                                                            {
                                                                <td class="text-danger">
                                                                    @("0"+getWorkingHours+":0"+getMinutes)
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td class="text-danger">
                                                                    @("0"+getWorkingHours+":"+getMinutes)
                                                                </td>
                                                            }
                                                        }
                                                        @* check if working hours more than 10 hours *@
                                                        else if (Working_hours > 100000)
                                                        {
                                                            @* get Hours *@
                                                            var getWorkingHours = Int32.Parse(item.clock_out.Substring(0, 2)) - Int32.Parse(item.clock_in.Substring(0, 1)) - 1;
                                                            @* get Minutes *@
                                                            var getMinutes = Int32.Parse(item.clock_out.Substring(2, 2)) - Int32.Parse(item.clock_in.Substring(1, 2));
                                                            @* check if minutes negative *@
                                                            if (getMinutes < 0 && getWorkingHours >= 10)
                                                            {

                                                                var totalHours = getWorkingHours;
                                                                var totalMinutes = 60 + getMinutes;
                                                                <td>
                                                                    @(totalHours+":"+totalMinutes)
                                                                </td>
                                                            }
                                                            else if (getMinutes.ToString().Length >= 2 && getWorkingHours >= 10)
                                                            {


                                                                <td>
                                                                    @(getWorkingHours+":"+getMinutes)
                                                                </td>
                                                            }
                                                            else if (getMinutes.ToString().Length <= 2 && getWorkingHours >= 10)
                                                            {


                                                                <td>
                                                                    @(getWorkingHours+":0"+getMinutes)
                                                                </td>
                                                            }

                                                            else if (getMinutes < 0)
                                                            {
                                                                var totalHours = getWorkingHours + getMinutes;
                                                                var totalMinutes = 60 + getMinutes;
                                                                <td>
                                                                    @(totalHours+":"+totalMinutes)
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                <td>
                                                                    @(getWorkingHours+":"+getMinutes)
                                                                </td>
                                                            }

                                                        }
                                                        @* range between 8-9 hours ++ *@
                                                        else
                                                        {
                                                            //
                                                            var getWorkingHours = 0;
                                                            if (Int32.Parse(item.clock_in) > 100000)
                                                            {
                                                                getWorkingHours = Int32.Parse(item.clock_out.Substring(0, 2)) - Int32.Parse(item.clock_in.Substring(0, 2)) - 1;
                                                            }
                                                            else
                                                            {
                                                                getWorkingHours = Int32.Parse(item.clock_out.Substring(0, 2)) - Int32.Parse(item.clock_in.Substring(0, 1)) - 1;
                                                            }

                                                            var getMinutes = Int32.Parse(item.clock_out.Substring(2, 2)) - Int32.Parse(item.clock_in.Substring(1, 2));
                                                            if (getMinutes < 0 && getMinutes.ToString().Length >= 3 && getWorkingHours.ToString().Length >= 2)
                                                            {

                                                                var totalHours = getWorkingHours + getMinutes;
                                                                var totalMinutes = 60 + getMinutes;


                                                                <td>
                                                                    @(getWorkingHours+":"+getMinutes.ToString().Substring(1,2))
                                                                </td>


                                                            }
                                                            else if (getMinutes < 0 && getMinutes.ToString().Length >= 3)
                                                            {

                                                                var totalHours = getWorkingHours + getMinutes;
                                                                var totalMinutes = 60 + getMinutes;


                                                                <td>
                                                                    @("0"+getWorkingHours+":"+getMinutes.ToString().Substring(1,2))
                                                                </td>

                                                            }
                                                            else if (getMinutes < 0 && getWorkingHours.ToString().Length >= 2)
                                                            {
                                                                var totalHours = getWorkingHours + getMinutes;
                                                                var totalMinutes = 60 + getMinutes;



                                                                <td>
                                                                    @(getWorkingHours+":0"+getMinutes.ToString().Substring(1,1))
                                                                </td>



                                                            }
                                                            else if (getMinutes < 0)
                                                            {
                                                                var totalHours = getWorkingHours + getMinutes;
                                                                var totalMinutes = 60 + getMinutes;
                                                                <td>
                                                                    @("0"+getWorkingHours+":0"+getMinutes.ToString().Substring(1,1))
                                                                </td>
                                                            }
                                                            else
                                                            {
                                                                if (getMinutes.ToString().Length >= 2)
                                                                {
                                                                    <td>
                                                                        @("0"+getWorkingHours+":"+getMinutes)
                                                                    </td>
                                                                }
                                                                else if (Working_hours >= 100000)
                                                                {
                                                                    <td>
                                                                        @(getWorkingHours+":0"+getMinutes)
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td>
                                                                        @("0"+getWorkingHours+":0"+getMinutes)
                                                                    </td>
                                                                }

                                                            }
                                                        }

                                                    }








                                                    else
                                                    {
                                                        <td></td>
                                                    }


                                                    if (item.status == "ABS")
                                                    {
                                                        <td>
                                                            <span class="badge badge-danger">@Html.DisplayFor(modelItem => item.status)</span>
                                                        </td>
                                                    }
                                                    else if (item.Date_public_holidays != null)
                                                    {

                                                        <td class="">
                                                            <span class="badge badge-danger"> @Html.DisplayFor(modelItem => item.Date_description) </span>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.status)
                                                        </td>
                                                    }
                                                }








                                                @if (item.employee_code == item.employee_code && item.date == ViewBag.getLastIndex)
                                                {


                                                    DateTime fromDate = new DateTime(Int32.Parse(ViewBag.getYear), Int32.Parse(ViewBag.getMonth), Int32.Parse(ViewBag.getDate));
                                                    // check
                                                    DateTime toDate = new DateTime(Int32.Parse(ViewBag.getYear), Int32.Parse(ViewBag.getMonth), 21);

                                                    while (fromDate <= toDate)
                                                    {
                                                        fromDate = fromDate.AddDays(1);
                                                        <body>
                                                    <tr>
                                                        <td>@(item.employee_code)</td>
                                                        <td>@(item.employee_name)</td>
                                                        @if (fromDate.ToString("ddd") == "Sat")
                                                        {
                                                            <td class="bg-light">@(fromDate.ToString("dd/MM/yyyy")) </td>
                                                        }
                                                        else if (fromDate.ToString("ddd") == "Sun")
                                                        {
                                                            <td class="bg-light">@(fromDate.ToString("dd/MM/yyyy")) </td>

                                                        }
                                                        else
                                                        {
                                                            <td>@(fromDate.ToString("dd/MM/yyyy"))</td>
                                                        }
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                        <td></td>
                                                    </tr>
                                                    </body>
                                                }


                                            }


                                                </tr>
                                            </tbody>

                                        }



                                    }

                                }
                                else
                                { @ViewBag.Error}


                        </table>
                    </div>

                    <script>
                        var newURL = location.href.split("?")[0];
                        window.history.pushState('object', document.title, newURL);
                    </script>



